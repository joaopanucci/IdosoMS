rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Funções auxiliares
    function isSignedIn() { 
      return request.auth != null; 
    }
    
    function getUserRole() { 
      return request.auth.token.role;
    }
    
    function getUserId() { 
      return request.auth.uid; 
    }
    
    function getUserMunicipio() { 
      return request.auth.token.ibge_municipio; 
    }
    
    function getUserEquipes() {
      return request.auth.token.equipes != null ? request.auth.token.equipes : [];
    }
    
    function isSuperAdmin() {
      return getUserRole() == 'superadmin';
    }
    
    function isAdmin() {
      return getUserRole() in ['superadmin', 'admin'];
    }
    
    function isCoordMunicipal() {
      return getUserRole() in ['superadmin', 'admin', 'coord'];
    }
    
    function canManageUsers() {
      return getUserRole() in ['superadmin', 'admin', 'coord'];
    }
    
    function canCreateData() {
      return getUserRole() in ['superadmin', 'admin', 'coord', 'agente'];
    }
    
    function isSameMunicipio(municipioData) {
      return getUserMunicipio() == municipioData || isAdmin();
    }

    // === USUÁRIOS ===
    match /users/{userId} {
      allow read: if isSignedIn() && (
        userId == getUserId() || 
        isAdmin() ||
        (isCoordMunicipal() && resource.data.ibge_municipio == getUserMunicipio())
      );
      
      allow create: if isSignedIn() && canManageUsers() && (
        isAdmin() || 
        (getUserRole() == 'coord' && request.resource.data.ibge_municipio == getUserMunicipio())
      );
      
      allow update: if isSignedIn() && (
        userId == getUserId() ||
        isAdmin() ||
        (isCoordMunicipal() && resource.data.ibge_municipio == getUserMunicipio())
      );
      
      allow delete: if isSignedIn() && (
        isSuperAdmin() ||
        (getUserRole() == 'admin' && resource.data.role != 'superadmin')
      );
      
      allow list: if isSignedIn() && (
        isAdmin() ||
        (getUserRole() == 'coord')
      );
    }

    // === MUNICÍPIOS ===
    match /municipios/{ibgeCode} {
      allow read: if true; // Dados públicos
      allow write: if isSignedIn() && isAdmin();
      allow list: if true; // Lista pública para seleção
    }

    // === PACIENTES ===
    match /pacientes/{pacienteId} {
      allow read: if isSignedIn() && (
        isAdmin() ||
        isSameMunicipio(resource.data.ibge_municipio)
      );
      
      allow create: if isSignedIn() && canCreateData() && (
        isAdmin() ||
        request.resource.data.ibge_municipio == getUserMunicipio()
      ) && validatePacienteData();
      
      allow update: if isSignedIn() && (
        isAdmin() ||
        (isCoordMunicipal() && resource.data.ibge_municipio == getUserMunicipio()) ||
        (getUserRole() == 'agente' && resource.data.createdBy == getUserId())
      ) && validatePacienteData();
      
      allow delete: if isSignedIn() && (
        isSuperAdmin() ||
        (getUserRole() == 'admin') ||
        (getUserRole() == 'coord' && resource.data.ibge_municipio == getUserMunicipio())
      );
      
      allow list: if isSignedIn() && (
        isAdmin() ||
        request.query.where('ibge_municipio', '==', getUserMunicipio())
      );
      
      function validatePacienteData() {
        let data = request.resource.data;
        return data.keys().hasAll(['nome', 'ibge_municipio', 'createdBy', 'createdAt']) &&
               data.nome is string && data.nome.size() > 0 &&
               data.ibge_municipio is string &&
               data.createdBy is string &&
               data.createdAt is timestamp;
      }
    }

    // === AVALIAÇÕES ===
    match /avaliacoes/{avaliacaoId} {
      allow read: if isSignedIn() && (
        isAdmin() ||
        isSameMunicipio(resource.data.ibge_municipio)
      );
      
      allow create: if isSignedIn() && canCreateData() && (
        isAdmin() ||
        request.resource.data.ibge_municipio == getUserMunicipio()
      ) && validateAvaliacaoData();
      
      allow update: if isSignedIn() && (
        isAdmin() ||
        (isCoordMunicipal() && resource.data.ibge_municipio == getUserMunicipio()) ||
        (getUserRole() == 'agente' && resource.data.profissionalUid == getUserId())
      ) && validateAvaliacaoData();
      
      allow delete: if isSignedIn() && (
        isSuperAdmin() ||
        (getUserRole() == 'admin') ||
        (getUserRole() == 'coord' && resource.data.ibge_municipio == getUserMunicipio())
      );
      
      allow list: if isSignedIn() && (
        isAdmin() ||
        request.query.where('ibge_municipio', '==', getUserMunicipio())
      );
      
      function validateAvaliacaoData() {
        let data = request.resource.data;
        return data.keys().hasAll(['pacienteId', 'tipo', 'respostas', 'escore_total', 'risco', 'ibge_municipio', 'profissionalUid', 'dataAvaliacao', 'createdAt']) &&
               data.pacienteId is string &&
               data.tipo in ['IVCF20', 'IVSF10'] &&
               data.respostas is map &&
               data.escore_total is number &&
               data.risco in ['baixo', 'moderado', 'alto'] &&
               data.ibge_municipio is string &&
               data.profissionalUid is string &&
               data.dataAvaliacao is timestamp &&
               data.createdAt is timestamp;
      }
    }

    // === PARÂMETROS DO SISTEMA ===
    match /parametros/{parametroId} {
      allow read: if true; // Parâmetros públicos (faixas de risco, etc.)
      allow write: if isSignedIn() && isAdmin();
    }

    // === EQUIPES/INE ===
    match /equipes/{equipeId} {
      allow read: if isSignedIn() && (
        isAdmin() ||
        equipeId in getUserEquipes() ||
        resource.data.ibge_municipio == getUserMunicipio()
      );
      
      allow create, update: if isSignedIn() && (
        isAdmin() ||
        (isCoordMunicipal() && request.resource.data.ibge_municipio == getUserMunicipio())
      );
      
      allow delete: if isSignedIn() && isAdmin();
      
      allow list: if isSignedIn() && (
        isAdmin() ||
        getUserMunicipio() != null
      );
    }

    // === UNIDADES/CNES ===
    match /unidades/{unidadeId} {
      allow read: if isSignedIn() && (
        isAdmin() ||
        resource.data.ibge_municipio == getUserMunicipio()
      );
      
      allow create, update: if isSignedIn() && (
        isAdmin() ||
        (isCoordMunicipal() && request.resource.data.ibge_municipio == getUserMunicipio())
      );
      
      allow delete: if isSignedIn() && isAdmin();
      
      allow list: if isSignedIn() && (
        isAdmin() ||
        getUserMunicipio() != null
      );
    }

    // === LOGS/AUDITORIA ===
    match /logs/{logId} {
      allow read: if isSignedIn() && isAdmin();
      allow create: if isSignedIn(); // Qualquer usuário pode criar logs
      allow list: if isSignedIn() && isAdmin();
      // Logs nunca são atualizados ou deletados
    }

    // === RELATÓRIOS/EXPORTS ===
    match /exports/{exportId} {
      allow read, delete: if isSignedIn() && (
        resource.data.createdBy == getUserId() ||
        isAdmin() ||
        (isCoordMunicipal() && resource.data.ibge_municipio == getUserMunicipio())
      );
      
      allow create: if isSignedIn() && canCreateData();
      
      allow list: if isSignedIn() && (
        isAdmin() ||
        getUserMunicipio() != null
      );
    }

    // === CONFIGURAÇÕES GLOBAIS ===
    match /config/{configId} {
      allow read: if isSignedIn();
      allow write: if isSignedIn() && isSuperAdmin();
    }

    // Negar acesso a qualquer outra coleção não especificada
    match /{document=**} {
      allow read, write: if false;
    }
  }
}