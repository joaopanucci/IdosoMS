rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    
    // Perfis de usuário - fotos
    match /users/{userId}/profile/{fileName} {
      allow read: if true; // Fotos de perfil são públicas
      allow write: if request.auth != null && 
                     request.auth.uid == userId &&
                     request.resource.size < 5 * 1024 * 1024 && // 5MB máximo
                     request.resource.contentType.matches('image/.*');
      allow delete: if request.auth != null && 
                      request.auth.uid == userId;
    }
    
    // Exports/Relatórios - temporários
    match /exports/{userId}/{fileName} {
      allow read, write: if request.auth != null && 
                           request.auth.uid == userId;
      allow delete: if request.auth != null && 
                      request.auth.uid == userId;
    }
    
    // Anexos de pacientes (se necessário)
    match /pacientes/{pacienteId}/anexos/{fileName} {
      allow read: if request.auth != null && 
                    (request.auth.token.role in ['superadmin', 'admin'] ||
                     // Verificar se é do mesmo município seria ideal, mas Storage rules são limitadas
                     request.auth.token.role in ['coord', 'agente']);
      
      allow write: if request.auth != null && 
                     request.auth.token.role in ['superadmin', 'admin', 'coord', 'agente'] &&
                     request.resource.size < 10 * 1024 * 1024; // 10MB máximo
      
      allow delete: if request.auth != null && 
                      request.auth.token.role in ['superadmin', 'admin', 'coord'];
    }
    
    // Recursos públicos/assets do sistema
    match /assets/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
                     request.auth.token.role in ['superadmin', 'admin'];
    }
    
    // Negar acesso a outros caminhos
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}